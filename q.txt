using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

using System.Net;
using System.Net.Sockets;
using System.Threading;


namespace server
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        const int port = 666;
        static TcpListener listener;

        public MainWindow()
        {
            InitializeComponent();
        }
        
        public void Process(TcpClient tcpClient)
        {
            TcpClient client = tcpClient;
            NetworkStream stream = null;
            
                stream = client.GetStream();
                byte[] data = new byte[64];
            try
            {
                while (true)
                {
                    StringBuilder builder = new StringBuilder();
                    int bytes = 0;
                    do
                    {
                        bytes = stream.Read(data, 0, data.Length);
                        builder.Append(Encoding.Unicode.GetString(data, 0, bytes));
                    }
                    while (stream.DataAvailable);

                    string message = builder.ToString();
                    if (message == "c0nn3c710n_c10s3")
                    {
                        stream.Close();
                        client.Close();
                        Dispatcher.BeginInvoke(new Action(() => listBox.Items.Add("Connection lost"))); 
                        //listBox.Items.Add("Connection lost");
                        break;
                    }
                    string message1="";
                    for (int i = message.Length - 1; i >= 0; i--)
                    {
                       message1 += message[i].ToString();
                    }
                    data = Encoding.Unicode.GetBytes(message1);
                    stream.Write(data, 0, data.Length);
                }
            }
            catch
            {
                //listBox.Items.Add("Connection lost");
            }
            finally
            {
                if (client != null)
                {
                    client.Close();
                }
                if (stream != null)
                {
                    stream.Close();
                }
            }
        }

        public void listen()
        {
            try
            {
                while (true)
                {
                    TcpClient client = listener.AcceptTcpClient();
                    Thread clientThread = new Thread(() => Process(client));
                    Dispatcher.BeginInvoke(new Action(() => listBox.Items.Add("New connection")));
                    clientThread.Start();
                    
                }
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
                //listBox.Items.Add("Connection lost");
            }

        }

        private void button_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                listener = new TcpListener(IPAddress.Parse("127.0.0.1"), port);
                listener.Start();
                listBox.Items.Add("Server has been started");
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            Thread clientThread = new Thread(() => listen());
            clientThread.Start();
        }

        private void button_stop_Click(object sender, RoutedEventArgs e)
        {
            listener.Stop();
            listBox.Items.Add("Server has been stopped");
        }

        private void listBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {

        }
    }
}